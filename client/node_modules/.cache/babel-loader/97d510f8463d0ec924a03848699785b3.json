{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js\";\nimport React, { Component } from 'react';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      restaurants: [],\n      selectedRestaurant: '',\n      isLoading: false,\n      data: []\n    };\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, names;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/restaurants');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              _this.setState({\n                data: body\n              });\n\n              names = Array.from(body).map(function (names) {\n                return names.Name;\n              });\n\n              _this.setState({\n                restaurantNames: names,\n                isLoading: false\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.pickedRestaurant = _this.pickedRestaurant.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      restaurants: [],\n      selectedRestaurant: '',\n      isLoading: false,\n      data: [],\n      restaurantNames: [],\n      detailsOpen: false,\n      restaurantReviews: [],\n      restaurantRating: '',\n      restaurantMood: '',\n      restaurantCity: '',\n      restaurantState: '',\n      detailsHidden: true,\n      restaurantId: ''\n    };\n    return _this;\n  } //function to contain the fetch\n\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //sets isLoading to true if we want to display some graphics during loading\n      this.setState({\n        isLoading: true\n      }); //fetch pulls all restaurant data into an array\n\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"pickedRestaurant\",\n    value: function pickedRestaurant(selectedRestaurant) {\n      this.setState({\n        isLoading: true\n      }); //selected Name\n\n      this.setState({\n        detailsOpen: false\n      });\n      var lclrest = selectedRestaurant.target.value;\n      this.setState({\n        selectedRestaurant: lclrest\n      }); //Selected Mood\n\n      var lclDataArray = this.state.data.filter(function (mood) {\n        return mood.Name == lclrest;\n      });\n      var lclMood = lclDataArray[0].Mood;\n      this.setState({\n        restaurantMood: lclMood\n      }); //Selected Rating\n\n      var lclRating = lclDataArray[0].Rating;\n      this.setState({\n        restaurantRating: lclRating\n      }); //Selected Reviews\n\n      var lclReviews = lclDataArray[0].Reviews;\n      this.setState({\n        restaurantReviews: lclReviews\n      }); //Selected City\n\n      var lclCity = lclDataArray[0].City;\n      this.setState({\n        restaurantCity: lclCity\n      }); //Selected state\n\n      var lclState = lclDataArray[0].State;\n      this.setState({\n        restaurantState: lclState\n      }); //ID\n\n      var lclId = lclDataArray[0]._id;\n      this.setState({\n        restaurantId: lclId\n      });\n      this.setState({\n        detailsOpen: true\n      });\n      this.setState({\n        detailsHidden: false\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //populates the select\n      var options = this.state.restaurantNames ? this.state.restaurantNames.map(function (name) {\n        return React.createElement(\"option\", {\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, name);\n      }) : ''; //populates the reviews\n\n      var reviews = this.state.restaurantReviews ? this.state.restaurantReviews.map(function (review) {\n        return React.createElement(\"li\", {\n          value: review,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, review);\n      }) : ''; //variables to hold the state to display\n\n      var selectedName = this.state.selectedRestaurant;\n      var selectedMood = this.state.restaurantMood;\n      var selectedRating = this.state.restaurantRating;\n      var selectedCity = this.state.restaurantCity;\n      var selectedState = this.state.restaurantState;\n      var detailsHidden = this.state.detailsHidden;\n      var detailsOpen = this.state.detailsOpen;\n      var selectedId = this.state.restaurantId;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"restaurant-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"restaurant-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" All Restaurants!\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"restaurants-name\",\n        onChange: this.pickedRestaurant,\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Select A Restaurant\"), options), React.createElement(\"details\", {\n        id: \"restaurantDeets\",\n        open: detailsOpen,\n        value: selectedName,\n        hidden: detailsHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, selectedName, React.createElement(\"p\", {\n        id: \"restaurantMood\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, selectedMood), React.createElement(\"p\", {\n        id: \"restaurantRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, selectedRating, \" Outta 5\"), React.createElement(\"p\", {\n        id: \"restaurantReviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Reviews\")), React.createElement(\"p\", {\n        id: \"restaurantId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"ID: \", selectedId), React.createElement(\"ul\", {\n        id: \"restaurantReviewsText\",\n        style: {\n          listStyleType: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, reviews), React.createElement(\"address\", {\n        id: \"restaurantAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, selectedCity, \", \", selectedState)))))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js"],"names":["React","Component","Main","props","state","restaurants","selectedRestaurant","isLoading","data","getDataFromDb","fetch","response","json","body","setState","names","Array","from","map","Name","restaurantNames","componentDidMount","bind","pickedRestaurant","detailsOpen","restaurantReviews","restaurantRating","restaurantMood","restaurantCity","restaurantState","detailsHidden","restaurantId","lclrest","target","value","lclDataArray","filter","mood","lclMood","Mood","lclRating","Rating","lclReviews","Reviews","lclCity","City","lclState","State","lclId","_id","options","name","reviews","review","selectedName","selectedMood","selectedRating","selectedCity","selectedState","selectedId","width","textAlign","listStyleType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Main extends Component {\n\n\tstate = {\n\t\trestaurants: [],\n\t\tselectedRestaurant: '',\n\t\tisLoading: false,\n\t\tdata: [],\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\tthis.getDataFromDb = this.getDataFromDb.bind(this);\n\t\tthis.pickedRestaurant = this.pickedRestaurant.bind(this);\n\t\tthis.state = {\n\t\t\trestaurants: [],\n\t\t\tselectedRestaurant: '',\n\t\t\tisLoading: false,\n\t\t\tdata: [],\n\t\t\trestaurantNames: [],\n\t\t\tdetailsOpen: false,\n\t\t\trestaurantReviews:[],\n\t\t\trestaurantRating:'',\n\t\t\trestaurantMood:'',\n\t\t\trestaurantCity: '',\n\t\t\trestaurantState:'',\n\t\t\tdetailsHidden:true,\n\t\t\trestaurantId:''\n\t\t};\n\t}\n\n\t//function to contain the fetch\n\tcomponentDidMount() {\n\t\t//sets isLoading to true if we want to display some graphics during loading\n\t\tthis.setState({ isLoading: true});\n\t\t//fetch pulls all restaurant data into an array\n\t\tthis.getDataFromDb();\n\t}\n\n\tgetDataFromDb = async () => {\n\t\tconst response = await fetch('/restaurants');\n\t\tconst body = await response.json();\n\t\tthis.setState({data: body});\n\t\tvar names = Array.from(body).map(names => names.Name);\n\t\tthis.setState({restaurantNames: names,\n\t\t\t\t\t\t\t\t\t  isLoading: false});\n\t};\n\n\tpickedRestaurant(selectedRestaurant) {\n\t\tthis.setState({ isLoading: true});\n\t\t//selected Name\n\t\tthis.setState({detailsOpen: false});\n\t\tconst lclrest = selectedRestaurant.target.value;\n\t\tthis.setState({selectedRestaurant: lclrest});\n\t\t//Selected Mood\n\t\tconst lclDataArray = this.state.data.filter(mood=>mood.Name == lclrest);\n\t\tvar lclMood = lclDataArray[0].Mood;\n\t\tthis.setState({restaurantMood:lclMood});\n\t\t//Selected Rating\n\t\tvar lclRating = lclDataArray[0].Rating;\n\t\tthis.setState({restaurantRating: lclRating});\n\t\t//Selected Reviews\n\t\tvar lclReviews = lclDataArray[0].Reviews;\n\t\tthis.setState({restaurantReviews: lclReviews});\n\t\t//Selected City\n\t\tvar lclCity = lclDataArray[0].City;\n\t\tthis.setState({restaurantCity: lclCity});\n\t\t//Selected state\n\t\tvar lclState = lclDataArray[0].State;\n\t\tthis.setState({restaurantState: lclState});\n\t\t//ID\n\t\tvar lclId = lclDataArray[0]._id;\n\t\tthis.setState({restaurantId: lclId});\n\t\tthis.setState({detailsOpen: true});\n\t\tthis.setState({detailsHidden: false});\n\t\tthis.setState({ isLoading: false});\n\t}\n\n\trender() {\n\t\t//populates the select\n\t\tvar options = this.state.restaurantNames?\n\t\tthis.state.restaurantNames.map(function(name){\n\t\t\treturn <option value={name}>{name}</option>\n\t\t})\n\t\t: '';\n\t\t//populates the reviews\n\t\tvar reviews = this.state.restaurantReviews?\n\t\tthis.state.restaurantReviews.map(function(review){\n\t\t\treturn <li value={review}>{review}</li>\n\t\t})\n\t\t:'';\n\t\t//variables to hold the state to display\n\t\tvar selectedName = this.state.selectedRestaurant;\n\t\tvar selectedMood = this.state.restaurantMood;\n\t\tvar selectedRating = this.state.restaurantRating;\n\t\tvar selectedCity = this.state.restaurantCity;\n\t\tvar selectedState = this.state.restaurantState;\n\t\tvar detailsHidden = this.state.detailsHidden;\n\t\tvar detailsOpen = this.state.detailsOpen;\n\t\tvar selectedId = this.state.restaurantId;\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t<div class = \"App\">\n\t\t\t<div class= \"container\">\n\t\t\t<div class=\"restaurant-content\">\n\t\t\t<form style = {{width:'100%', textAlign: 'center'}}>\n\t\t\t<h1 class=\"restaurant-header\"> All Restaurants!</h1>\n\t\t\t<select className=\"form-control\" id=\"restaurants-name\" onChange={this.pickedRestaurant} style = {{width:'100%', textAlign: 'center'}}>\n\t\t\t<option value=\"\" selected>Select A Restaurant</option>{options}\n\t\t\t</select>\n\n\t\t\t<details id=\"restaurantDeets\" open={detailsOpen} value = {selectedName} hidden={detailsHidden}>\n\t\t\t{selectedName}\n\t\t\t<p id=\"restaurantMood\">{selectedMood}</p>\n\t\t\t<p id=\"restaurantRating\" >{selectedRating} Outta 5</p>\n\t\t\t<p id=\"restaurantReviews\"><strong>Reviews</strong></p>\n\t\t\t<p id=\"restaurantId\">ID: {selectedId}</p>\n\t\t\t<ul id=\"restaurantReviewsText\" style= {{listStyleType:'none'}} >{reviews}</ul>\n\t\t\t<address id=\"restaurantAddress\">{selectedCity}, {selectedState}</address>\n\t\t\t</details>\n\t\t\t</form>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}