{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js\";\nimport React, { Component } from 'react';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      restaurants: [],\n      selectedRestaurant: '',\n      isLoading: false,\n      data: []\n    };\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/restaurants');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              _this.setState({\n                restaurants: body\n              });\n\n              console.log(_this.state.restaurants);\n              _context.next = 10;\n              return fetch('/restaurants').then(function (data) {\n                return data.json();\n              }).then(function (res) {\n                return _this.setState({\n                  data: res.data\n                });\n              }).then(console.log(_this.data));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //function to contain the fetch\n\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //sets isLoading to true if we want to display some graphics during loading\n      this.setState({\n        isLoading: true\n      }); //fetch pulls all restaurant data into an array\n\n      this.getDataFromDb(); // fetch('/restaurants')\n      // .then(res =>res.json())\n      // .then(resArray=>resArray.forEach(function(item,listHTML=[],listItemNames=[]) {\n      // \t//concatenates the values together for each value in our db\n      // \tlistItemNames = item.Name.toString();\n      // \t//adds each array item to a dropdown list\n      // \tdocument.getElementById(\"restaurants-name\").innerHTML += '<option value=\"'+ listItemNames + '\">'+ listItemNames + '</select>'\n      // }))\n      // this.setState({ isLoading: false});\n    }\n  }, {\n    key: \"pickedRestaurant\",\n    value: function pickedRestaurant(selectedRestaurant) {\n      document.getElementById(\"restaurantDeets\").open = false;\n      document.getElementById(\"restaurantName\").hidden = false;\n      selectedRestaurant = document.getElementById(\"restaurants-name\").value;\n      document.getElementById(\"restaurantReviewsText\").innerHTML = '<strong>Reviews</strong>'; //fetch pulls all restaurant data into an array\n\n      fetch('/restaurants').then(function (res) {\n        return res.json();\n      }).then(function (resArray) {\n        return resArray.filter(function (displayThisOne, selectedRestaurant) {\n          selectedRestaurant = document.getElementById(\"restaurants-name\").value;\n          return displayThisOne.Name == selectedRestaurant;\n        }).forEach(function (item) {\n          var listHTML = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n          document.getElementById(\"restaurantName\").innerHTML = item.Name.toString();\n          document.getElementById(\"restaurantMood\").innerHTML = 'Mood: ' + item.Mood.toString();\n          document.getElementById(\"restaurantRating\").innerHTML = 'Rating: ' + item.Rating.toString() + ' Outta 5';\n          document.getElementById(\"restaurantAddress\").innerHTML = '<strong>Address</strong> <br>' + item.Street.toString() + '<br>' + item.City.toString() + ', ' + item.State.toString() + '<br>' + item.Zip.toString();\n          item.Reviews.forEach(function (xitem) {\n            document.getElementById(\"restaurantReviewsText\").innerHTML += '<li>' + xitem + '</li>';\n          });\n          document.getElementById(\"restaurantDeets\").open = true;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"restaurant-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"restaurant-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" All Restaurants!\"), React.createElement(\"select\", {\n        id: \"restaurants-name\",\n        onChange: this.pickedRestaurant,\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Select A Restaurant\")), React.createElement(\"details\", {\n        id: \"restaurantDeets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"summary\", {\n        id: \"restaurantName\",\n        hidden: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"restaurantMood\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"restaurantRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"restaurantReviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        id: \"restaurantReviewsText\",\n        style: {\n          listStyleType: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"address\", {\n        id: \"restaurantAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js"],"names":["React","Component","Main","props","state","restaurants","selectedRestaurant","isLoading","data","getDataFromDb","fetch","response","json","body","setState","console","log","then","res","bind","document","getElementById","open","hidden","value","innerHTML","resArray","filter","displayThisOne","Name","forEach","item","listHTML","toString","Mood","Rating","Street","City","State","Zip","Reviews","xitem","width","textAlign","pickedRestaurant","listStyleType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Main extends Component {\n\n\tstate = {\n\t\trestaurants: [],\n\t\tselectedRestaurant: '',\n\t\tisLoading: false,\n\t\tdata: [],\n\t};\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.getDataFromDb = this.getDataFromDb.bind(this);\n\t}\n\t//function to contain the fetch\n\tcomponentDidMount() {\n\t\t//sets isLoading to true if we want to display some graphics during loading\n\t\tthis.setState({ isLoading: true});\n\t\t//fetch pulls all restaurant data into an array\n\t\tthis.getDataFromDb();\n\t\t// fetch('/restaurants')\n\t\t// .then(res =>res.json())\n\t\t// .then(resArray=>resArray.forEach(function(item,listHTML=[],listItemNames=[]) {\n\t\t// \t//concatenates the values together for each value in our db\n\t\t// \tlistItemNames = item.Name.toString();\n\t\t// \t//adds each array item to a dropdown list\n\t\t// \tdocument.getElementById(\"restaurants-name\").innerHTML += '<option value=\"'+ listItemNames + '\">'+ listItemNames + '</select>'\n\t\t// }))\n\t\t// this.setState({ isLoading: false});\n\t}\n\n\tgetDataFromDb = async () => {\n    const response = await fetch('/restaurants');\n\t\tconst body = await response.json();\n\t\tthis.setState({\n\t\t\trestaurants: body\n\t\t});\n\t\tconsole.log(this.state.restaurants);\n\t\tawait fetch('/restaurants')\n\t\t.then(data => data.json())\n\t\t.then(res => this.setState({data: res.data}))\n\t\t.then(console.log(this.data));\n\t};\n\n\tpickedRestaurant(selectedRestaurant) {\n\t\t\tdocument.getElementById(\"restaurantDeets\").open =false;\n\t\t\tdocument.getElementById(\"restaurantName\").hidden =false;\n\t\t\tselectedRestaurant = document.getElementById(\"restaurants-name\").value;\n\t\t\tdocument.getElementById(\"restaurantReviewsText\").innerHTML = '<strong>Reviews</strong>'\n\t\t\t//fetch pulls all restaurant data into an array\n\t\t\tfetch('/restaurants')\n\t\t\t.then(res =>res.json())\n\t\t\t.then(resArray=>resArray.filter(function(displayThisOne,selectedRestaurant) {\n\t\t\tselectedRestaurant = document.getElementById(\"restaurants-name\").value;\n\t\t\treturn displayThisOne.Name == selectedRestaurant;\n\t\t\t}).forEach(function(item,listHTML=[]) {\n\t\t\t\tdocument.getElementById(\"restaurantName\").innerHTML =item.Name.toString();\n\t\t\t\tdocument.getElementById(\"restaurantMood\").innerHTML ='Mood: '+item.Mood.toString();\n\t\t\t\tdocument.getElementById(\"restaurantRating\").innerHTML ='Rating: '+item.Rating.toString() + ' Outta 5';\n\t\t\t\tdocument.getElementById(\"restaurantAddress\").innerHTML ='<strong>Address</strong> <br>'+item.Street.toString() + '<br>' + item.City.toString()+ ', ' +item.State.toString()+ '<br>' +item.Zip.toString();\n\t\t\t\titem.Reviews.forEach(function(xitem) {\n\t\t\t\t\tdocument.getElementById(\"restaurantReviewsText\").innerHTML += '<li>' + xitem + '</li>';\n\t\t\t\t})\n\t\t\t\tdocument.getElementById(\"restaurantDeets\").open =true;\n\t\t\t}))\n\n\t}\n\n  render() {\n    return (\n\t<React.Fragment>\n\t<div class = \"App\">\n\t <div class= \"container\">\n\t<div class=\"restaurant-content\">\n\t\t<form style = {{width:'100%', textAlign: 'center'}}>\n\t\t<h1 class=\"restaurant-header\"> All Restaurants!</h1>\n\t\t\t<select id=\"restaurants-name\" onChange={this.pickedRestaurant} style = {{width:'100%', textAlign: 'center'}}>\n\t\t\t<option value=\"\" selected>Select A Restaurant</option>\n\t\t\t</select>\n\n\t\t<details id=\"restaurantDeets\">\n\t\t\t<summary id=\"restaurantName\" hidden='true'></summary>\n\t\t\t<p id=\"restaurantMood\"></p>\n\t\t\t<p id=\"restaurantRating\"></p>\n\t\t\t<p id=\"restaurantReviews\"></p>\n\t\t\t\t<ul id=\"restaurantReviewsText\" style= {{listStyleType:'none'}} ></ul>\n\t\t\t<address id=\"restaurantAddress\"></address>\n\n\n\t\t</details>\n\t\t</form>\n\n\t</div>\n\t</div>\n\t</div>\n\t</React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}