{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Restaurant.js\";\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport './styles/mainstyle.css';\n\nvar Restaurant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Restaurant, _Component);\n\n  function Restaurant(props) {\n    var _this;\n\n    _classCallCheck(this, Restaurant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Restaurant).call(this, props));\n    _this.state = {\n      restaurantName: '',\n      restaurantReviews: [],\n      restaurantRating: '',\n      restaurantMood: '',\n      restaurantCity: '',\n      restaurantState: '',\n      isLoading: false\n    };\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var requestUrl, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isLoading: true\n              });\n\n              requestUrl = \"/restaurants/\" + _this.props.match.params.id;\n              console.log(requestUrl);\n              _context.next = 5;\n              return fetch(requestUrl);\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              body = _context.sent;\n\n              _this.setState({\n                restaurantName: body.Name,\n                restaurantReviews: [],\n                restaurantRating: '',\n                restaurantMood: '',\n                restaurantCity: '',\n                restaurantState: ''\n              });\n\n              _this.setState({\n                isLoading: false\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //function to contain the fetch\n\n\n  _createClass(Restaurant, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //sets isLoading to true if we want to display some graphics during loading\n      this.setState({\n        isLoading: true\n      }); //fetch pulls all restaurant data into an array\n\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.restaurantName);\n    }\n  }]);\n\n  return Restaurant;\n}(Component);\n\nexport default Restaurant;","map":{"version":3,"sources":["/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Restaurant.js"],"names":["React","Component","Alert","Restaurant","props","state","restaurantName","restaurantReviews","restaurantRating","restaurantMood","restaurantCity","restaurantState","isLoading","getDataFromDb","setState","requestUrl","match","params","id","console","log","fetch","response","json","body","Name","componentDidMount","bind"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,wBAAP;;IAEMC,U;;;;;AAWJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AADiB,UAVnBC,KAUmB,GAVX;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,iBAAiB,EAAC,EAFZ;AAGNC,MAAAA,gBAAgB,EAAC,EAHX;AAINC,MAAAA,cAAc,EAAC,EAJT;AAKNC,MAAAA,cAAc,EAAE,EALV;AAMNC,MAAAA,eAAe,EAAC,EANV;AAONC,MAAAA,SAAS,EAAE;AAPL,KAUW;AAAA,UAcnBC,aAdmB;AAAA;AAAA;AAAA;AAAA,6BAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,oBAAKC,QAAL,CAAc;AAAEF,gBAAAA,SAAS,EAAE;AAAb,eAAd;;AACIG,cAAAA,UAFU,GAEG,kBAAkB,MAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAF7C;AAGdC,cAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAHc;AAAA,qBAISM,KAAK,CAACN,UAAD,CAJd;;AAAA;AAIRO,cAAAA,QAJQ;AAAA;AAAA,qBAKKA,QAAQ,CAACC,IAAT,EALL;;AAAA;AAKRC,cAAAA,IALQ;;AAMd,oBAAKV,QAAL,CAAc;AAAER,gBAAAA,cAAc,EAAEkB,IAAI,CAACC,IAAvB;AACZlB,gBAAAA,iBAAiB,EAAC,EADN;AAEZC,gBAAAA,gBAAgB,EAAC,EAFL;AAGZC,gBAAAA,cAAc,EAAC,EAHH;AAIZC,gBAAAA,cAAc,EAAE,EAJJ;AAKZC,gBAAAA,eAAe,EAAC;AALJ,eAAd;;AAME,oBAAKG,QAAL,CAAc;AAAEF,gBAAAA,SAAS,EAAE;AAAb,eAAd;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdG;AAEjB,UAAKc,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKd,aAAL,GAAqB,MAAKA,aAAL,CAAmBc,IAAnB,uDAArB;AAHiB;AAIlB,G,CAED;;;;;wCACoB;AAClB;AACA,WAAKb,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd,EAFkB,CAGlB;;AACA,WAAKC,aAAL;AACD;;;6BAkBU;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKR,KAAL,CAAWC,cADZ,CADF;AAMD;;;;EAhDoBL,S;;AAkDvB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport './styles/mainstyle.css';\n\nclass Restaurant extends Component{\n  state = {\n    restaurantName: '',\n    restaurantReviews:[],\n    restaurantRating:'',\n    restaurantMood:'',\n    restaurantCity: '',\n    restaurantState:'',\n    isLoading: false,\n  }\n\n  constructor(props) {\n    super(props);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDataFromDb = this.getDataFromDb.bind(this);\n  }\n\n  //function to contain the fetch\n  componentDidMount() {\n    //sets isLoading to true if we want to display some graphics during loading\n    this.setState({ isLoading: true});\n    //fetch pulls all restaurant data into an array\n    this.getDataFromDb();\n  }\n\n  getDataFromDb = async () => {\n    this.setState({ isLoading: true});\n    var requestUrl = \"/restaurants/\" + this.props.match.params.id;\n    console.log(requestUrl);\n    const response = await fetch(requestUrl);\n    const body = await response.json();\n    this.setState({ restaurantName: body.Name,\n      restaurantReviews:[],\n      restaurantRating:'',\n      restaurantMood:'',\n      restaurantCity: '',\n      restaurantState:''});\n      this.setState({ isLoading: false});\n    };\n\n\n    render() {\n      return (\n        <div className=\"App\">\n        {this.state.restaurantName}\n        </div>\n      );\n\n    }\n  }\n  export default Restaurant;\n"]},"metadata":{},"sourceType":"module"}